<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Coding Blog</title>
    <link>https://andychen841210.github.io/codingBlog/post/</link>
    <description>Recent content in Posts on Coding Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 14 Sep 2018 11:16:58 +0800</lastBuildDate>
    
	<atom:link href="https://andychen841210.github.io/codingBlog/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>448. Find All Numbers Disappeared in an Array</title>
      <link>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/leetcode/448/</link>
      <pubDate>Fri, 14 Sep 2018 11:16:58 +0800</pubDate>
      
      <guid>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/leetcode/448/</guid>
      <description>&lt;h2 id=&#34;leetcode-448-https-leetcode-com-problems-find-all-numbers-disappeared-in-an-array-description&#34;&gt;&lt;a href=&#34;https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/description/&#34;&gt;LeetCode 448&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&#34;abridge-problem-statement&#34;&gt;Abridge problem statement&lt;/h3&gt;

&lt;p&gt;Given an array of integers where 1 ≤ a[i] ≤ n (n = size of array), some elements appear twice and others appear once.
Find all the elements of [1, n] inclusive that do not appear in this array.
Could you do it without extra space and in O(n) runtime? You may assume the returned list does not count as extra space.&lt;/p&gt;

&lt;h3 id=&#34;solution-sketch&#34;&gt;Solution sketch&lt;/h3&gt;

&lt;p&gt;因為範圍保證從 1 到 n，
所以我們可以用陣列的值去對應他的位置，並將這個位置的值改成負數，
表示這個位置有出現在這個陣列當中，
接著只要看哪個位置的值是正數，表示缺少在陣列當中，並把它加到答案中即可，
時間複雜度 O(n)，空間複雜度 O(1)&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Round480ABC</title>
      <link>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round480abc/</link>
      <pubDate>Tue, 29 May 2018 10:55:41 +0800</pubDate>
      
      <guid>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round480abc/</guid>
      <description>&lt;h2 id=&#34;codeforces-round480-division-2-http-codeforces-com-contest-980&#34;&gt;&lt;a href=&#34;http://codeforces.com/contest/980&#34;&gt;Codeforces Round480 Division 2&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;a&#34;&gt;A&lt;/h2&gt;

&lt;h3 id=&#34;abridge-problem-statement&#34;&gt;Abridge problem statement&lt;/h3&gt;

&lt;p&gt;給定一堆的 links 和 pearls 問說可不可以任意移動 link 或 pearl，使得相鄰的兩個 pearl 之間的 link 數目相同&lt;/p&gt;

&lt;h3 id=&#34;solution-sketch&#34;&gt;Solution sketch&lt;/h3&gt;

&lt;p&gt;看 pearl 數可不可以整除 link 數，可以則輸出 YES，否則輸出 NO，注意當 pearl 為零的時候，輸出 YES&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Round473ABCD</title>
      <link>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round473abcd/</link>
      <pubDate>Sat, 26 May 2018 19:20:20 +0800</pubDate>
      
      <guid>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round473abcd/</guid>
      <description>&lt;h2 id=&#34;codeforces-round473-division-2-http-codeforces-com-contest-959&#34;&gt;&lt;a href=&#34;http://codeforces.com/contest/959&#34;&gt;Codeforces Round473 Division 2&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;a&#34;&gt;A&lt;/h2&gt;

&lt;h3 id=&#34;abridge-problem-statement&#34;&gt;Abridge problem statement&lt;/h3&gt;

&lt;p&gt;Mahmoud 和 Ehab 在玩一個遊戲，給定一個數字 n，每次輪到 Mahmoud 時，剩下的數字必須是偶數，否則 Mahmoud 就輸了，輪到 Ehab 時，剩下的數字必須是奇數，否則Ehab 就輸了，每個人每次的操作可以拿任意 1 到 n 之間的數，問說給定一個數字 n，最後贏的會是誰&lt;/p&gt;

&lt;h3 id=&#34;solution-sketch&#34;&gt;Solution sketch&lt;/h3&gt;

&lt;p&gt;直接判奇偶數&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Round435ABC</title>
      <link>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round435abc/</link>
      <pubDate>Tue, 03 Apr 2018 19:33:06 +0800</pubDate>
      
      <guid>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round435abc/</guid>
      <description>&lt;h2 id=&#34;codeforces-round435-division-2-http-codeforces-com-contest-862&#34;&gt;&lt;a href=&#34;http://codeforces.com/contest/862&#34;&gt;Codeforces Round435 Division 2&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;a&#34;&gt;A&lt;/h2&gt;

&lt;h3 id=&#34;abridge-problem-statement&#34;&gt;Abridge problem statement&lt;/h3&gt;

&lt;p&gt;給定 n 個不同的非負整數與 x，可以做的操作有加入或刪除任意的數字，問最少要幾步驟可以讓這串數字第一個缺少的數字是 x&lt;/p&gt;

&lt;h3 id=&#34;solution-sketch&#34;&gt;Solution sketch&lt;/h3&gt;

&lt;p&gt;將比 x 小的數字補起來，若有 x 則在刪除 x 即可&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Round442ABCD</title>
      <link>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round442abcd/</link>
      <pubDate>Fri, 30 Mar 2018 22:51:22 +0800</pubDate>
      
      <guid>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round442abcd/</guid>
      <description>&lt;h2 id=&#34;codeforces-round442-division-2-http-codeforces-com-contest-877&#34;&gt;&lt;a href=&#34;http://codeforces.com/contest/877&#34;&gt;Codeforces Round442 Division 2&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;a&#34;&gt;A&lt;/h2&gt;

&lt;h3 id=&#34;abridge-problem-statement&#34;&gt;Abridge problem statement&lt;/h3&gt;

&lt;p&gt;給定一個字串，問字串中有沒有出現 &amp;ldquo;Danil&amp;rdquo;, &amp;ldquo;Olya&amp;rdquo;, &amp;ldquo;Slava&amp;rdquo;, &amp;ldquo;Ann&amp;rdquo; and &amp;ldquo;Nikita&amp;rdquo; 其中一個名字，而這個名字中只能在字串中出現一次&lt;/p&gt;

&lt;h3 id=&#34;solution-sketch&#34;&gt;Solution sketch&lt;/h3&gt;

&lt;p&gt;直接掃一遍&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Round441ABCD</title>
      <link>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round441abcd/</link>
      <pubDate>Tue, 27 Mar 2018 18:15:35 +0800</pubDate>
      
      <guid>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round441abcd/</guid>
      <description>&lt;h2 id=&#34;codeforces-round441-division-2-http-codeforces-com-contest-876&#34;&gt;&lt;a href=&#34;http://codeforces.com/contest/876&#34;&gt;Codeforces Round441 Division 2&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;a&#34;&gt;A&lt;/h2&gt;

&lt;h3 id=&#34;abridge-problem-statement&#34;&gt;Abridge problem statement&lt;/h3&gt;

&lt;p&gt;在圖上走 n - 1 次，使得總共走的距離最小&lt;/p&gt;

&lt;h3 id=&#34;solution-sketch&#34;&gt;Solution sketch&lt;/h3&gt;

&lt;p&gt;每次都走最小的那條邊即可&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Round440ABC</title>
      <link>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round440abc/</link>
      <pubDate>Thu, 22 Mar 2018 23:24:52 +0800</pubDate>
      
      <guid>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round440abc/</guid>
      <description>&lt;h2 id=&#34;codeforces-round440-division-2-http-codeforces-com-contest-872&#34;&gt;&lt;a href=&#34;http://codeforces.com/contest/872&#34;&gt;Codeforces Round440 Division 2&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;a&#34;&gt;A&lt;/h2&gt;

&lt;h3 id=&#34;abridge-problem-statement&#34;&gt;Abridge problem statement&lt;/h3&gt;

&lt;p&gt;給定兩個非零 digit 的 list，求出最小的 pretty number，pretty number 定義為至少一個 digit 從第一個 list，至少一個 digit 從第二個 list&lt;/p&gt;

&lt;h3 id=&#34;solution-sketch&#34;&gt;Solution sketch&lt;/h3&gt;

&lt;p&gt;先檢查兩個 list 是否有重複的數字，若有了話找出最小的個位數就是答案，否則取兩個 list 當中個別最小的值拿出來，較小的擺十位數，較大的擺在個位數就是答案&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GCJ2017QualificationRoundB</title>
      <link>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/googlecodejam/gcj2017qualificationroundb/</link>
      <pubDate>Sun, 28 Jan 2018 21:34:41 +0800</pubDate>
      
      <guid>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/googlecodejam/gcj2017qualificationroundb/</guid>
      <description>&lt;h2 id=&#34;tidy-numbers-https-code-google-com-codejam-contest-3264486-dashboard-s-p1&#34;&gt;&lt;a href=&#34;https://code.google.com/codejam/contest/3264486/dashboard#s=p1&#34;&gt;Tidy Numbers&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&#34;abridge-problem-statement&#34;&gt;Abridge problem statement&lt;/h3&gt;

&lt;p&gt;定義一個數 x 是 tidy number 若且唯喏 x 的 digits 成單調遞增（non-descending）。例如 1122334, 379 就是 tidy number，而 635, 5773 就不是。現給定一正整數 N，求 1 ~ N 中最大的 tidy number 是哪個數？&lt;/p&gt;

&lt;h3 id=&#34;solution-sketch&#34;&gt;Solution sketch&lt;/h3&gt;

&lt;p&gt;可觀察出一些特性:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;若 N 本身就是 tidy，就答案就是 N&lt;/li&gt;
&lt;li&gt;否則，找出前綴最長的單調遞增 P，若 P 的尾數沒有連續一樣的數字，例如 1256XXX，則 P 的最後一位減去 1， P 後面的數字都補上 9，若 P 的尾數有連續一樣的數字了話，則找到最前面第一個一樣的數字減 1 ，剩下後面的數字都補上 9&lt;/li&gt;
&lt;li&gt;最後檢查開頭是否變成 0，若變成 0，則把開頭的 0 拔掉&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GCJ2017QualificationRoundA</title>
      <link>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/googlecodejam/gcj2017qualificationrounda/</link>
      <pubDate>Sun, 28 Jan 2018 21:34:29 +0800</pubDate>
      
      <guid>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/googlecodejam/gcj2017qualificationrounda/</guid>
      <description>&lt;h2 id=&#34;oversized-pancake-flipper-https-code-google-com-codejam-contest-3264486-dashboard-s-p0&#34;&gt;&lt;a href=&#34;https://code.google.com/codejam/contest/3264486/dashboard#s=p0&#34;&gt;Oversized Pancake Flipper&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&#34;abridge-problem-statement&#34;&gt;Abridge problem statement&lt;/h3&gt;

&lt;p&gt;字串只包含 -, +，定義一次反轉代表將 S 中一個（連續）長度為 K 的區間中的字元反轉：- 變成 +，+ 變成 -。請問最少要反轉幾次才能使整個字串變成全部都為 +。&lt;/p&gt;

&lt;h3 id=&#34;solution-sketch&#34;&gt;Solution sketch&lt;/h3&gt;

&lt;p&gt;直接轉&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>POJ1511</title>
      <link>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/poj/poj1511/</link>
      <pubDate>Sun, 28 Jan 2018 21:32:36 +0800</pubDate>
      
      <guid>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/poj/poj1511/</guid>
      <description>&lt;h2 id=&#34;atlantis-http-poj-org-problem-id-1151&#34;&gt;&lt;a href=&#34;http://poj.org/problem?id=1151&#34;&gt;Atlantis&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&#34;abridge-problem-statement&#34;&gt;Abridge problem statement&lt;/h3&gt;

&lt;p&gt;給定平面上 N 個矩形，求這些矩形覆蓋的面積。&lt;/p&gt;

&lt;h3 id=&#34;solution-sketch&#34;&gt;Solution sketch&lt;/h3&gt;

&lt;p&gt;原理參考&lt;a href=&#34;https://amoshyc.github.io/blog/template-ju-xing-mian-ji-he.html&#34;&gt; 這&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Round422ABCD</title>
      <link>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round422abcd/</link>
      <pubDate>Sun, 28 Jan 2018 21:27:16 +0800</pubDate>
      
      <guid>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round422abcd/</guid>
      <description>&lt;h2 id=&#34;codeforces-round422-division-2-http-codeforces-com-contest-822&#34;&gt;&lt;a href=&#34;http://codeforces.com/contest/822&#34;&gt;Codeforces Round422 Division 2&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;a&#34;&gt;A&lt;/h2&gt;

&lt;h3 id=&#34;abridge-problem-statement&#34;&gt;Abridge problem statement&lt;/h3&gt;

&lt;p&gt;給定 A 跟 B，問 A! 跟 B! 的最大公因數，min(A, B) &amp;lt;= 12&lt;/p&gt;

&lt;h3 id=&#34;solution-sketch&#34;&gt;Solution sketch&lt;/h3&gt;

&lt;p&gt;取 min(A, B) 直接坐階乘&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Round410ABC</title>
      <link>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round410abc/</link>
      <pubDate>Sun, 28 Jan 2018 21:27:07 +0800</pubDate>
      
      <guid>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round410abc/</guid>
      <description>&lt;h2 id=&#34;codeforces-round410-division-2-http-codeforces-com-contest-798&#34;&gt;&lt;a href=&#34;http://codeforces.com/contest/798&#34;&gt;Codeforces Round410 Division 2&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;a&#34;&gt;A&lt;/h2&gt;

&lt;h3 id=&#34;abridge-problem-statement&#34;&gt;Abridge problem statement&lt;/h3&gt;

&lt;p&gt;給定一個字串，問說可不可以換字串中一個字，使這個字串變成回文&lt;/p&gt;

&lt;h3 id=&#34;solution-sketch&#34;&gt;Solution sketch&lt;/h3&gt;

&lt;p&gt;直接掃過去看有沒有辦法換一個字讓他變成回文，若本身就是回文了話，若字串長度為偶數了話答案為 NO，因為一定要換一個字&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Round411ABCD</title>
      <link>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round411abcd/</link>
      <pubDate>Sun, 28 Jan 2018 21:25:10 +0800</pubDate>
      
      <guid>https://andychen841210.github.io/codingBlog/post/competitiveprogramming/codeforces/round411abcd/</guid>
      <description>&lt;h2 id=&#34;codeforces-round411-division-2-http-codeforces-com-contest-805&#34;&gt;&lt;a href=&#34;http://codeforces.com/contest/805&#34;&gt;Codeforces Round411 Division 2&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;a&#34;&gt;A&lt;/h2&gt;

&lt;h3 id=&#34;abridge-problem-statement&#34;&gt;Abridge problem statement&lt;/h3&gt;

&lt;p&gt;給定 l 跟 r，問哪個數字可以在這個區間中整除最多的數字，數字 1 除外&lt;/p&gt;

&lt;h3 id=&#34;solution-sketch&#34;&gt;Solution sketch&lt;/h3&gt;

&lt;p&gt;若 r - l 大於等於 1 了話，則表示每多兩個數就會有一個偶數，因此，這時候 2 會是可以整除最多的，否則了話 r - l 則為 0，因此輸出 r 或 l 即可&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>